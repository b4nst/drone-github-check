import envConfigMap from 'env-config-map'
import { compact, mapValues } from 'lodash'
import { isArray } from 'util'
import { DroneEnv } from '../types'

export const extractDroneEnv = (): DroneEnv =>
  mapValues(
    envConfigMap({
      CI: { default: true, type: 'boolean' },
      DRONE: { default: true, type: 'boolean' },
      DRONE_BRANCH: { type: 'string' },
      DRONE_BUILD_ACTION: { type: 'string' },
      DRONE_BUILD_CREATED: { type: 'number' },
      DRONE_BUILD_EVENT: { type: 'string' },
      DRONE_BUILD_FINISHED: { type: 'number' },
      DRONE_BUILD_NUMBER: { type: 'number' },
      DRONE_BUILD_PARENT: { type: 'number' },
      DRONE_BUILD_STARTED: { type: 'number' },
      DRONE_BUILD_STATUS: { type: 'string' },
      DRONE_COMMIT: { type: 'string' },
      DRONE_COMMIT_AFTER: { type: 'string' },
      DRONE_COMMIT_AUTHOR: { type: 'string' },
      DRONE_COMMIT_AUTHOR_AVATAR: { type: 'string' },
      DRONE_COMMIT_AUTHOR_EMAIL: { type: 'string' },
      DRONE_COMMIT_AUTHOR_NAME: { type: 'string' },
      DRONE_COMMIT_BEFORE: { type: 'string' },
      DRONE_COMMIT_BRANCH: { type: 'string' },
      DRONE_COMMIT_LINK: { type: 'string' },
      DRONE_COMMIT_MESSAGE: { type: 'string' },
      DRONE_COMMIT_REF: { type: 'string' },
      DRONE_COMMIT_SHA: { type: 'string' },
      DRONE_DEPLOY_TO: { type: 'string' },
      DRONE_FAILED_STAGES: { default: [], type: 'arrayCommaDelim' },
      DRONE_FAILED_STEPS: { default: [], type: 'arrayCommaDelim' },
      DRONE_GIT_HTTP_URL: { type: 'string' },
      DRONE_GIT_SSH_URL: { type: 'string' },
      DRONE_PULL_REQUEST: { type: 'number' },
      DRONE_REPO: { type: 'string' },
      DRONE_REPO_BRANCH: { type: 'string' },
      DRONE_REPO_LINK: { type: 'string' },
      DRONE_REPO_NAME: { type: 'string' },
      DRONE_REPO_NAMESPACE: { type: 'string' },
      DRONE_REPO_OWNER: { type: 'string' },
      DRONE_REPO_PRIVATE: { default: false, type: 'boolean' },
      DRONE_REPO_SCM: { default: 'git', type: 'string' },
      DRONE_REPO_VISIBILITY: { default: 'public', type: 'string' },
      DRONE_SEMVER: { type: 'string' },
      DRONE_SEMVER_BUILD: { type: 'string' },
      DRONE_SEMVER_ERROR: { type: 'string' },
      DRONE_SEMVER_MAJOR: { type: 'number' },
      DRONE_SEMVER_MINOR: { type: 'number' },
      DRONE_SEMVER_PATCH: { type: 'number' },
      DRONE_SEMVER_PRERELEASE: { type: 'string' },
      DRONE_SEMVER_SHORT: { type: 'string' },
      DRONE_SOURCE_BRANCH: { type: 'string' },
      DRONE_STAGE_ARCH: { type: 'string' },
      DRONE_STAGE_DEPENDS_ON: { default: [], type: 'arrayCommaDelim' },
      DRONE_STAGE_FINISHED: { type: 'number' },
      DRONE_STAGE_KIND: { type: 'string' },
      DRONE_STAGE_MACHINE: { type: 'string' },
      DRONE_STAGE_NAME: { type: 'string' },
      DRONE_STAGE_NUMBER: { type: 'number' },
      DRONE_STAGE_OS: { default: 'linux', type: 'string' },
      DRONE_STAGE_STARTED: { type: 'number' },
      DRONE_STAGE_STATUS: { type: 'string' },
      DRONE_STAGE_TYPE: { type: 'string' },
      DRONE_STAGE_VARIANT: { type: 'string' },
      DRONE_STEP_NAME: { type: 'string' },
      DRONE_STEP_NUMBER: { type: 'number' },
      DRONE_SYSTEM_HOST: { type: 'string' },
      DRONE_SYSTEM_HOSTNAME: { type: 'string' },
      DRONE_SYSTEM_PROTO: { type: 'string' },
      DRONE_SYSTEM_VERSION: { type: 'string' },
      DRONE_TAG: { type: 'string' },
      DRONE_TARGET_BRANCH: { type: 'string' }
    }).getRedacted(),
    e => (isArray(e) ? compact(e) : e)
  )
